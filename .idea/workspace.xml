<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="683de8f4-758e-4561-a457-c397d8603f0e" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.24.3" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "pistolricks"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "git@github.com:pistolricks/fem-go.git",
    "accountId": "b23fd8f0-7da6-4d49-a7c4-13cebf168904"
  }
}]]></component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2xNAk2gLhW6XcHvQPFf2xVEOjAz" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.Docker Up.executor": "Run",
    "Go Build.go build github.com/pistolricks/fe-masters.executor": "Run",
    "Go Build.go build github.com/pistolricks/m-api.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.GoLinterPluginOnboarding": "true",
    "RunOnceActivity.GoLinterPluginStorageMigration": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "junie.onboarding.icon.badge.shown": "true",
    "last_opened_file_path": "/Volumes/ssd/home/GoLandProjects/m-api",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/Users/eriksmith/GoLandProjects/fe-masters/main.go",
    "settings.editor.selected.configurable": "editing.templates"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ],
    "GitStage.ChangesTree.GroupingKeys": [
      "directory",
      "module",
      "repository"
    ]
  }
}]]></component>
  <component name="RunManager" selected="Go Build.go build github.com/pistolricks/m-api">
    <configuration name="go build github.com/pistolricks/m-api" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="m-api" />
      <working_directory value="$PROJECT_DIR$" />
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.GolandRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="false" />
        <option name="DIRENV_TRUSTED" value="false" />
      </EXTENSION>
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <kind value="PACKAGE" />
      <package value="github.com/pistolricks/m-api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="Docker Up" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.Docker Up" />
      <item itemvalue="Go Build.go build github.com/pistolricks/m-api" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/pistolricks/m-api" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-3b128438d3f6-4b567d62c776-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-251.25410.140" />
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-GO-251.25410.140" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="683de8f4-758e-4561-a457-c397d8603f0e" name="Changes" comment="" />
      <created>1747768296549</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1747768296549</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add Docker Compose setup for PostgreSQL and update configs&#10;&#10;Introduce a `docker-compose.yml` file to manage a PostgreSQL database container with persistent storage under `./database/postgres-data`. Update `.gitignore` to exclude the `database` folder and modify IDE configuration files to include Docker-related settings. The changes streamline development and allow containerized database usage." />
    <MESSAGE value="Add PostgreSQL integration with initialization support&#10;&#10;Introduce PostgreSQL setup using the `pgx` driver and a new `store` package to handle database connections. Update the application to initialize and close database connections properly. Modify dependencies and IDE settings to support the integration, improving development workflow." />
    <MESSAGE value="Add PostgreSQL integration and update dependencies&#10;&#10;Enable PostgreSQL integration using the `pgx` driver and streamline database connection handling with a new `store` package. Updated Go module dependencies and IDE configuration files to support the integration. These changes enhance development workflow and prepare the project for PostgreSQL-backed operations." />
    <MESSAGE value="Add workout update functionality with database integration&#10;&#10;Implemented workout updates by extending the handler and store logic. Added support for fetching, modifying, and persisting updated workout data, including nested workout entries, in PostgreSQL. Updated related routes and refined request handling for improved API functionality." />
    <MESSAGE value="Add workout deletion functionality with database support&#10;&#10;Implemented workout deletion by extending the handler and store logic. Added a new endpoint to handle DELETE requests for workouts, integrated with PostgreSQL for persistent removal. Updated routes and enhanced error handling to improve API robustness." />
    <MESSAGE value="Add JSON utility functions and ID param reader&#10;&#10;Introduce `WriteJSON` for handling JSON responses and `ReadIDParam` for extracting and validating ID parameters from HTTP requests. These utilities simplify common tasks in request handling, improving code reusability and clarity." />
    <MESSAGE value="Refactor workout handlers to use utility functions&#10;&#10;Replaced repetitive JSON response and ID parsing logic with `utils.WriteJSON` and `utils.ReadIDParam`. Added improved logging for error handling and updated handler constructors to include a logger for better debugging and maintainability." />
    <MESSAGE value="Refactor workout handlers to use utility functions&#10;&#10;Replaced redundant JSON response and ID parsing logic with `utils.WriteJSON` and `utils.ReadIDParam`. Enhanced error handling with improved logging and updated handler constructors to include a logger, improving debugging and maintainability." />
    <MESSAGE value="Update workspace.xml with revised commit message history&#10;&#10;Aligned commit message records in workspace.xml for consistency. Updated redundant entries to reflect the latest updates to error handling, logging, and utility usage. No functional changes to the application." />
    <MESSAGE value="Update dependencies and enhance Docker configuration&#10;&#10;Removed unused Go module dependencies and updated `go.mod` and `go.sum` for a cleaner dependency graph. Enhanced `docker-compose.yml` by adding a separate test database configuration. Updated `.idea/workspace.xml` to reflect changes in commit message history and run configurations." />
    <MESSAGE value="Add tokens table migration and update project settings&#10;&#10;This commit introduces a new migration to create a `tokens` table for managing user authentication tokens. Additionally, it updates IDE configuration files to reflect changes in GitHub pull request settings and modifies the default Run configuration. Unnecessary `IntrospectionStateNumber` fields were also removed from data source files." />
    <MESSAGE value="Update IDE config and metadata for consistency&#10;&#10;This commit updates `.idea` metadata files to reflect recent changes in schema and project settings. It modifies workspace configuration and adjusts data source metadata to ensure alignment with the latest project updates. These changes have no impact on application functionality." />
    <MESSAGE value="Add tokens table migration and token generation logic&#10;&#10;Introduced a `tokens` table with migration and updated related schema and metadata adjustments in `.idea` files. Added `GenerateToken` function in a new `tokens` package for user authentication tokens with hash generation and expiry management. Changes ensure alignment between the database schema and application logic." />
    <MESSAGE value="Add token generation and authentication endpoint&#10;&#10;Introduced a new `tokens` table and corresponding migration for managing authentication tokens. Added a `TokenHandler` to handle token creation via a new `/tokens/authentication` endpoint, leveraging newly implemented token store logic. Updated the application to integrate token handling, ensuring alignment between database, API routes, and application logic." />
    <MESSAGE value="Add token management and user authentication features&#10;&#10;Introduce token generation logic and an authentication endpoint. Added a method to retrieve user tokens, updated database queries for token handling, and implemented anonymous user checks. These changes enhance user authentication and integrate token functionality into the application." />
    <MESSAGE value="Add middleware for user authentication handling&#10;&#10;Introduce `UserMiddleware` to manage user authentication via tokens. Includes `Authenticate` and `RequireUser` methods to validate tokens and enforce access control. Integrated middleware into the application with updates to the initialization logic and user store functions." />
    <MESSAGE value="    Remove unnecessary blank line in routes definition&#10;&#10;    Eliminated an extra blank line in the route setup for better code readability and consistency. This minor change has no functional impact." />
    <MESSAGE value="Update routes to enforce user authentication&#10;&#10;Wrapped workout handler routes with `RequireUser` middleware to ensure authentication is enforced for all user actions on workouts. This improves access control by validating user tokens before performing any operations." />
    <MESSAGE value="Enforce user authentication and update workouts schema&#10;&#10;Wrapped workout routes with `RequireUser` middleware to ensure only authenticated users can perform actions. Modified the workouts table schema to include a `user_id` column with a foreign key constraint for better data integrity and user association. These changes improve security and data consistency." />
    <MESSAGE value="Add user authentication and ownership checks to workouts&#10;&#10;Enforced user authentication in workout routes by integrating `RequireUser` middleware. Updated the workouts schema to include a `user_id` column with a foreign key constraint, ensuring data integrity and user association. Additionally, added checks to restrict workout modifications and deletions to the respective owners." />
    <option name="LAST_COMMIT_MESSAGE" value="Add user authentication and ownership checks to workouts&#10;&#10;Enforced user authentication in workout routes by integrating `RequireUser` middleware. Updated the workouts schema to include a `user_id` column with a foreign key constraint, ensuring data integrity and user association. Additionally, added checks to restrict workout modifications and deletions to the respective owners." />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/main.go</url>
          <line>37</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>